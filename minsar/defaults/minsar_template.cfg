## processing template default setting

################################# process_rsmas Parameters ################################
process_flag                          = auto         # [True]
every_day_flag                        = auto         # [yes]
login                                 = auto         # [pegasus.ccs.miami.edu]
user                                  = None         # [user]
processingMethod                      = auto         # [smallbaseline, minopy]
demMethod                             = auto         # [boundingBox, ssara]
cleanopt                              = auto         # [ 0 / 1 / 2 / 3 / 4]   0,1: none 2: keep merged,geom_reference,SLC 3: keep PYSAR 4: everything
processor                             = auto         # [isce, ...]
upload_flag                           = auto         # upload data products to server, auto for True
insarmaps_flag                        = auto         # create insarmaps products, auto for False
image_products_flag                   = auto         # create hazard website products, auto for False

# parameters to select topsStack or stripmapStack:
acquisition_mode                      = auto         # [tops, stripmap] auto for tops
raw_image_dir                         = None         # if input data is raw images (for stripmap data)
multiple_raw_frame                    = auto         # [True, False] auto for False (for stripmap data)

################################# ssara option Parameters #################################
ssaraopt.platform                     = None         # platform name [SENTINEL-1A, ...]
ssaraopt.collectionName               = None         # "Supersites CSK Hawaii"
ssaraopt.intersectsWithPoint          = None         # for ssara's --intersectsWith=Point() option
ssaraopt.relativeOrbit                = None         # relative orbit number
ssaraopt.frame                        = None         # frame number
ssaraopt.startDate                    = None         # starting acquisition date [YYYYMMDD]
ssaraopt.endDate                      = None         # ending acquisition date [YYYYMMDD]

################################# topsStack Parameters ####################################
topsStack.slcDir                      = auto         # [SLCs dir]
topsStack.orbitDir                    = auto         # [$SENTINEL_ORBITS]
topsStack.auxDir                      = auto         # [$SENTINEL_AUX]
topsStack.workingDir                  = auto         # [/projects/scratch/insarlab/$USER/projname]
topsStack.demDir                      = auto         # [DEM file dir]
topsStack.referenceDate               = auto         # [reference date acquisition]
topsStack.numConnections              = auto         # number of interferograms with each image and next acquisitions, auto for 3
topsStack.numOverlapConnections       = auto         # [N of overlap Ifgrams for NESD. Default : 3]
topsStack.subswath                    = auto         # [List of swaths. Default : '1 2 3']
topsStack.boundingBox                 = None         # [ -1 0.15 -91.7 -90.9] required
topsStack.textCmd                     = auto         # [eg: source ~/.bashrc]
topsStack.excludeDates                = auto         # [20080520,20090817 / no], auto for no
topsStack.includeDates                = auto         # [20080520,20090817 / no], auto for all
topsStack.azimuthLooks                = auto         # [1 / 2 / 3 / ...], auto for 3
topsStack.rangeLooks                  = auto         # [1 / 2 / 3 / ...], auto for 9
topsStack.filtStrength                = auto         # [0.0-0.8] auto for 0.3
topsStack.esdCoherenceThreshold       = auto         # Coherence threshold for estimating az misreg using ESD. auto for 0.85
topsStack.snrMisregThreshold          = auto         # SNR threshold for estimating rng misreg using cross-correlation. auto for 10
topsStack.unwMethod                   = auto         # [snaphu icu], auto for snaphu
topsStack.polarization                = auto         # SAR data polarization. auto for vv
topsStack.coregistration              = auto         # Coregistration options: a) geometry b) NESD. auto for NESD
topsStack.workflow                    = auto         # [interferogram / offset / slc / correlation] auto for interferogram
topsStack.startDate                   = auto         # [YYYYMMDD]. auto for first date available
topsStack.stopDate                    = auto         # [YYYYMMDD]. auto for end date available
topsStack.useGPU                      = auto         # Allow App to use GPU when available [default: False]
topsStack.rmFilter                    = auto         # Allow App to create unwrapped interferogram, removing filter

################################# stripmapStack Parameters ####################################
stripmapStack.slcDir                      = auto         # [SLCs dir]
stripmapStack.workingDir                  = auto         # [/projects/scratch/insarlab/$USER/projname]
stripmapStack.demDir                      = auto         # [DEM file dir]
stripmapStack.boundingBox                 = None         # [ -1 0.15 -91.7 -90.9] required
stripmapStack.referenceDate               = auto         # [reference date acquisition]
stripmapStack.timeThreshold               = auto         # [Time threshold (max temporal baseline in days)] auto for 10000.0
stripmapStack.baselineThreshold           = auto         # [Baseline threshold (max bperp in meters)] auto for 5000.0
stripmapStack.azimuthLooks                = auto         # [1 / 2 / 3 / ...], automatically defined if sensor is given, otherwise is 10
stripmapStack.rangeLooks                  = auto         # [1 / 2 / 3 / ...], automatically defined if sensor is given, otherwise is 10
stripmapStack.sensor                      = auto         # [alos, ers, envisat, csk] auto for None
stripmapStack.LowBandFrequency            = auto         # auto for None
stripmapStack.HighBandFrequency           = auto         # auto for None
stripmapStack.subbandBandwith             = auto         # auto for None
stripmapStack.unwMethod                   = auto         # [snaphu, icu, snaphu2stage], auto for snaphu
stripmapStack.golsteinFilterStrength      = auto         # wrapped phase before spatial coherence estimation, auto for 0.8
stripmapStack.filterSigmaX                = auto         # gaussian filtering the dispersive and nonDispersive phase, auto for 100.0
stripmapStack.filterSigmaY                = auto         # auto for 100.0
stripmapStack.filterSizeX                 = auto         # auto for 800.0
stripmapStack.filterSizeY                 = auto         # auto for 800.0
stripmapStack.filterKernelRotation        = auto         # in degrees, auto for 0.0
stripmapStack.workflow                    = auto         # [slc / interferogram / ionosphere] auto for slc
stripmapStack.zerodop                     = auto         # [True, False] Use zero doppler geometry for processing, auto for False
stripmapStack.nofocus                     = auto         # [True, False] If input data is already focused to SLCs - Default : do focus (False)
stripmapStack.textCmd                     = auto         # [eg: source ~/.bashrc]
stripmapStack.useGPU                      = auto         # Allow App to use GPU when available [default: False]
#stripmapStack.watermask                   = auto         # [True, False], auto for True

################################# HPC JOB QUEUE Parameters ####################################
## These systems are supported and default values are set,
## you can change the queue name and all others will adjust
# Frontera --> available queue names:[nvdimm, development, normal, rtx, rtx-dev, flex], default = normal
# stampede2 --> available queue names:[normal, skx-normal, development, skx-dev], default = skx-normal
# comet --> available queue names:[compute, shared, gpu], default = gpu
# pegasus --> available queue names:[general, parallel, bigmem], default = general
# eos_sanghoon --> default = batch
# beijing_server --> default = batch
# deqing_server --> default = batch
QUEUENAME                     = auto       # defaults based on the above systems
WALLTIME_FACTOR               = auto       # default = 1  this factor multiplies by the defaults values of wall_time

# if you are not using one of the above systems, you need to set up the following options as well
JOB_CPUS_PER_NODE             = auto       # defaults based on the above systems
THREADS_PER_CORE              = auto       # defaults based on the above systems
MEM_PER_NODE                  = auto       # defaults based on the above systems
MAX_JOBS_PER_QUEUE            = auto       # defaults based on the above systems

# Following are the job submission schemes supported by minsar:
# singleTask                     ---> submit each task of a batch file separately in a job
# multiTask_singleNode           ---> distribute tasks of a batch file into jobs with one node
# multiTask_multiNode            ---> submit tasks of a batch file in one job with required number of nodes
# launcher_multiTask_singleNode  ---> distribute tasks of a batch file into jobs with one node, submit with launcher
# launcher_multiTask_multiNode   ---> submit tasks of a batch file in one job with required number of nodes using launcher
job_submission_scheme         = auto       # defaults = launcher_multiTask_singleNode

